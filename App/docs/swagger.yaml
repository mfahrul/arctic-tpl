basePath: /
definitions:
  config.StatusBadRequestResponse:
    properties:
      code:
        example: 400
        type: integer
      error:
        type: string
      message:
        example: Bad Request
        type: string
    type: object
  config.StatusInternalServerErrorResponse:
    properties:
      code:
        example: 500
        type: integer
      error:
        type: string
      message:
        example: error
        type: string
    type: object
  config.StatusNotFoundResponse:
    properties:
      code:
        example: 404
        type: integer
      error:
        type: string
      message:
        example: Not Found
        type: string
    type: object
  config.StatusUnauthorizedResponse:
    properties:
      message:
        example: Unauthorized/No API key found in request
        type: string
    type: object
  core.CreateItemReq:
    properties:
      additional_info:
        items:
          type: string
        type: array
      created_by:
        type: string
      item_desc:
        type: string
      item_name:
        type: string
    required:
    - item_name
    type: object
  core.CreateItemResponse:
    properties:
      code:
        example: 201
        type: integer
      message:
        example: Created
        type: string
    type: object
  core.DeleteItemResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/core.DeletedAtItem'
        type: object
      message:
        example: Ok
        type: string
    type: object
  core.DeletedAtItem:
    properties:
      deleted_at:
        type: string
    type: object
  core.GetAllItemsResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/core.Item'
        type: array
      message:
        example: Ok
        type: string
    type: object
  core.GetItemResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/core.Item'
        type: object
      message:
        example: Ok
        type: string
    type: object
  core.Item:
    properties:
      additional_info:
        items:
          type: string
        type: array
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      id:
        type: string
      is_deleted:
        type: boolean
      item_desc:
        type: string
      item_name:
        type: string
      status:
        description: 0, 1, 9 => notactive, activate, ban
        type: integer
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: fahrul@giftano.com
    name: Giftano API Support
    url: http://giftano.io
  description: Dashboard users management service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Giftano Core API Docs
  version: 0.1.1
paths:
  /item:
    post:
      consumes:
      - application/json
      description: Create item for access
      parameters:
      - description: Item Param
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/core.CreateItemReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/core.CreateItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/config.StatusBadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/config.StatusUnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/config.StatusInternalServerErrorResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: Create a item
      tags:
      - item
  /item/{id}:
    delete:
      description: Delete item by ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      - description: Delete by
        in: header
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.DeleteItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/config.StatusBadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/config.StatusUnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/config.StatusInternalServerErrorResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: Delete a item
      tags:
      - item
    get:
      description: Get a item by ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.GetItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/config.StatusBadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/config.StatusUnauthorizedResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/config.StatusNotFoundResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/config.StatusInternalServerErrorResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: Get a item
      tags:
      - item
    put:
      consumes:
      - application/json
      description: Update item by ID
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      - description: Item Param
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/core.Item'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.GetItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/config.StatusBadRequestResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/config.StatusUnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/config.StatusInternalServerErrorResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: Update a item
      tags:
      - item
  /items:
    get:
      description: Get all items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/core.GetAllItemsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/config.StatusUnauthorizedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/config.StatusInternalServerErrorResponse'
      security:
      - ApiKeyAuth: []
      - BasicAuth: []
      summary: Get all items
      tags:
      - item
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: apikey
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
